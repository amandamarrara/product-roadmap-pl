server {
    # Cloud Run provides the port via $PORT environment variable
    listen ${PORT};
    listen [::]:${PORT};
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/wasm;

    # Security headers optimized for Cloud Run
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Handle client-side routing (SPA) - React Router support
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add cache control for HTML files
        location ~* \.html$ {
            expires 5m;
            add_header Cache-Control "public, no-cache, must-revalidate";
        }
    }

    # Cache static assets aggressively
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
        
        # Enable CORS for fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Special handling for runtime environment config
    location = /env.js {
        expires 0;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Health check endpoint for Cloud Run
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Readiness probe endpoint
    location /ready {
        access_log off;
        return 200 "ready\n";
        add_header Content-Type text/plain;
    }

    # Robots.txt
    location = /robots.txt {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }

    # Favicon
    location = /favicon.ico {
        try_files $uri =404;
        access_log off;
        log_not_found off;
        expires 1y;
    }

    # Hide nginx version and server info
    server_tokens off;
}